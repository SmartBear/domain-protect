version: 2.1

aliases:
  - &branch-filter
    branches:
      only:
        - dev
        - main

x-machine: &x-machine
  image: ubuntu-2204:2022.04.1 # always update to latest image listed in discuss.circleci.com

orbs:
  aws-cli: circleci/aws-cli@3.1

jobs:
  python_tests:
    working_directory: /tmp/project
    docker:
      - image: python:3.9
    steps:
      - checkout
      - run:
          name: install dependencies
          command: pip install -r requirements-dev.txt
      - run:
          name: black
          command: black --check --line-length 120 .
      - run:
          name: prospector
          command: prospector
  terraform_format:
    working_directory: /tmp/project
    docker:
      - image: hashicorp/terraform:1.2.2
    steps:
      - checkout
      - run:
          name: terraform format
          command: terraform fmt -check -recursive
  sast_python:
    machine: *x-machine
    parameters:
      rootdir:
        type: string
    steps:
      - checkout
      - run:
          name: install bandit
          command: |
            pip3 install --upgrade bandit
            echo $PATH
            bandit --version
            which bandit
      - run:
          name: prepare reports dir
          command: mkdir --parents ~/reports_sast_python/
      - run:
          name: generate json report
          command: >
            bandit
            --exit-zero
            --ini .config/sast_python_bandit_json.yml <<parameters.rootdir>>
            1> ~/reports_sast_python/${RANDOM}.json
      - store_artifacts:
          path: ../reports_sast_python/
      - run:
          name: test code
          command: >
            bandit
            --ini .config/sast_python_bandit_cli.yml
            <<parameters.rootdir>>
  sast_terraform:
    machine: *x-machine
    parameters:
      rootdir:
        type: string
    steps:
      - checkout
      - run:
          name: install checkov
          command: |
            pip3 install --upgrade checkov
            echo $PATH
            checkov --version
            which checkov
      - run:
          name: prepare reports dir
          command: mkdir --parents ~/reports_sast_terraform/
      - run:
          name: generate json report
          command: >
            checkov
            --config-file .config/sast_terraform_checkov_json.yml
            --directory <<parameters.rootdir>>
            1> ~/reports_sast_terraform/${RANDOM}.json
      - store_artifacts:
          path: ../reports_sast_terraform/
      - run:
          name: test code
          command: >
            checkov
            --config-file .config/sast_terraform_checkov_cli.yml
            --directory << parameters.rootdir >>
  plan:
    executor: aws-cli/default
    working_directory: /tmp/project
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: WEB IDENTITY PROFILE
          role-arn: ${AWS_DEPLOY_ROLE_ARN}
          role-session-name: domain-protect
      - run:
          name: install terraform
          command: |
            wget -O /tmp/terraform.zip https://releases.hashicorp.com/terraform/1.2.2/terraform_1.2.2_linux_amd64.zip
            unzip -d ~/bin /tmp/terraform.zip
      - run:
          name: terraform state bucket variables
          command: |
            echo "export TERRAFORM_STATE_BUCKET=$TERRAFORM_STATE_BUCKET" >> $BASH_ENV
            echo "export TERRAFORM_STATE_KEY=$TERRAFORM_STATE_KEY" >> $BASH_ENV
            echo "export TERRAFORM_STATE_REGION=$TERRAFORM_STATE_REGION" >> $BASH_ENV
      - run:
          name: terraform init
          command: "set -x;terraform init -backend-config=bucket=$TERRAFORM_STATE_BUCKET -backend-config=key=$TERRAFORM_STATE_KEY -backend-config=region=$TERRAFORM_STATE_REGION"
      - run:
          name: set terraform workspace
          command: |
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              terraform workspace select prd || terraform workspace new prd
            else
              terraform workspace select "$CIRCLE_BRANCH" || terraform workspace new "$CIRCLE_BRANCH"
            fi
      - run:
          name: terraform plan
          command: terraform plan -out tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup:
          profile-name: WEB IDENTITY PROFILE
          role-arn: ${AWS_DEPLOY_ROLE_ARN}
          role-session-name: domain-protect
      - run:
          name: install terraform
          command: |
            wget -O /tmp/terraform.zip https://releases.hashicorp.com/terraform/1.2.2/terraform_1.2.2_linux_amd64.zip
            unzip -d ~/bin /tmp/terraform.zip
      - run:
          name: install virtualenv
          command: pip install virtualenv
      - run:
          name: terraform apply
          command: terraform apply -auto-approve tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .

workflows:
  cd:
    jobs:
      - python_tests
      - terraform_format
      - sast_terraform:
          rootdir: .
      - sast_python:
          rootdir: .
      - plan:
          filters: *branch-filter
          requires:
            - python_tests
            - terraform_format
            - sast_terraform
            - sast_python
          context:
            - oidc
      - approve:
          filters: *branch-filter
          type: approval
          requires:
            - plan
      - apply:
          filters: *branch-filter
          requires:
            - approve
          context:
            - oidc